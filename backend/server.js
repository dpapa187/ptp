import express from "express";
import cors from "cors";

const app = express();

// âœ… Allow your frontend domain (update with your actual Render static site URL)
app.use(
  cors({
    origin: [
      "https://<your-frontend-name>.onrender.com", // replace with your Render static site
      "http://localhost:3000" // keep for local dev
    ],
    methods: ["GET", "POST"],
  })
);

app.use(express.json());

// âœ… Health check endpoint
app.get("/api/health", (req, res) => {
  res.json({
    healthy: true,
    timestamp: new Date().toISOString(),
    services: {
      functions: "operational",
      environment: "configured",
      aiProviders: ["openai", "anthropic"], // or leave empty if not wired yet
    },
    version: "1.0.0",
    deployment: {
      region: "render",
      environment: "production",
    },
  });
});

// âœ… Generate endpoint (demo placeholder)
app.post("/api/generate", async (req, res) => {
  try {
    const { inputValue = "Your Topic", template = "minimalist" } = req.body || {};

    const html = `
      <!doctype html>
      <html>
        <body>
          <h1>${template} â€” ${inputValue}</h1>
          <p>This is demo content generated by the backend. Wire your AI logic here (OpenAI / Anthropic).</p>
        </body>
      </html>
    `;

    res.json({
      success: true,
      title: `${inputValue} â€” Generated (Demo)`,
      description: "Demo from Render backend",
      content: html,
      wordCount: 800,
      seoScore: 90,
      suggestedImages: 3,
      affiliateOpportunities: 4,
      apiProvider: "demo",
    });
  } catch (error) {
    console.error("Error in /api/generate:", error);
    res.status(500).json({ success: false, error: "Internal Server Error" });
  }
});

// âœ… Port binding
const port = process.env.PORT || 10000;
app.listen(port, () => {
  console.log(`ðŸš€ API listening on port ${port}`);
});
